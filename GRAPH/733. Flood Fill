class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int inicolor=image[sr][sc];
        int ans[][]=image;
        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        dfs(sr,sc,image,color,ans,inicolor,delrow,delcol);
        return ans;
    }
    public void dfs(int r,int c,int image[][],int color,int ans[][],int inicolor,int delrow[],int delcol[]){
        ans[r][c]=color;
        int n=image.length;
        int m=image[0].length;
        for(int i=0;i<4;i++){
            int trow=r+delrow[i];
            int tcol=c+delcol[i];
            if(trow>=0 && trow<n && tcol>=0 && tcol<m && image[trow][tcol]==inicolor && ans[trow][tcol]!=color){
                dfs(trow,tcol,image,color,ans,inicolor,delrow,delcol);
            }
        }
    }
}