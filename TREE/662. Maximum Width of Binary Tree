class Pair{
    TreeNode root;
    int num;
    Pair(TreeNode r,int n){
        this.root=r;
        this.num=n;

    }
}
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        int maxwidth=0;
        if(root==null)return 0;
        Queue<Pair>q=new LinkedList<>();
        q.add(new Pair(root,0));
        while(!q.isEmpty()){
            int n=q.size();
            int first=0,last=0;
            for(int i=0;i<n;i++){
                Pair p=q.poll();
                int index=p.num;
                TreeNode roo=p.root;
                if(i==0)first=index;
                if(i==n-1)last=index;
                if(roo.left!=null)q.add(new Pair(roo.left,2*index));
                if(roo.right!=null)q.add(new Pair(roo.right,2*index+1));
            }
            maxwidth=Math.max(maxwidth,last-first+1);
        }
        return maxwidth;

    }
}