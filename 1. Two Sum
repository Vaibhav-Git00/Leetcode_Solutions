class Solution {
    public int[] twoSum(int[] nums, int target) {
        for(int i=0;i<nums.length;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                    return new int[]{i,j};
                }
            }
        }
    return new int []{};
    }     
}
//optimise way
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> mp = new HashMap<>();
        int[] ans = new int[2];
        int n = nums.length;
        
        for (int i = 0; i < n; i++) {
            int rem = target - nums[i];
            if (mp.containsKey(rem)) {
                ans[0] = mp.get(rem);
                ans[1] = i;
                break;
            }
            mp.put(nums[i], i);
        }
        return ans;
    }
}
